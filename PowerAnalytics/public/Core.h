//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/fepriyadi/dev/android/office/mnc/digital/analytics/mobile-sdk/iospowerlytics/j2objc/java/Core.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Core")
#ifdef RESTRICT_Core
#define INCLUDE_ALL_Core 0
#else
#define INCLUDE_ALL_Core 1
#endif
#undef RESTRICT_Core

#if !defined (Core_) && (INCLUDE_ALL_Core || defined(INCLUDE_Core))
#define Core_

@class JavaLangBoolean;
@class JavaLangException;
@class OrgJsonJSONArray;

@interface Core : NSObject

#pragma mark Public

- (instancetype)init;

+ (OrgJsonJSONArray *)removeFromJsonArrayWithOrgJsonJSONArray:(OrgJsonJSONArray *)jsrc
                                                      withInt:(jint)index;

#pragma mark Protected

+ (void)dpWithNSString:(NSString *)s;

- (void)dryRun_WithBoolean:(jboolean)dryRun;

- (void)flushDataWithBoolean:(jboolean)retry
                 withBoolean:(jboolean)flushAll;

- (NSString *)getAppStringWithNSString:(NSString *)fname;

- (NSString *)getAppVersion;

- (NSString *)getDeviceDetails;

+ (void)peWithNSString:(NSString *)s
 withJavaLangException:(JavaLangException *)e;

- (jboolean)setAppStringWithNSString:(NSString *)fname
                        withNSString:(NSString *)s;

- (void)setClientStuffWithNSString:(NSString *)platform
                      withNSString:(NSString *)clientKey
                      withNSString:(NSString *)productDomain
                      withNSString:(NSString *)bundleId
                      withNSString:(NSString *)userID;

- (void)setEnvironmentProduction_WithBoolean:(jboolean)production;

- (void)setLastEnvironment;

- (void)setStagingUrl_WithNSString:(NSString *)stagingUrl;

- (void)videoAdAbr_WithInt:(jint)bitrate;

- (void)videoAdBuffer_;

- (void)videoAdClicked_WithNSString:(NSString *)tag;

- (void)videoAdComplete_WithNSString:(NSString *)tag;

- (void)videoAdError_WithNSString:(NSString *)tag
                     withNSString:(NSString *)msg;

- (void)videoAdLoad_WithNSString:(NSString *)tag;

- (void)videoAdPause_WithNSString:(NSString *)tag;

- (void)videoAdPlay_WithNSString:(NSString *)tag;

- (void)videoAdSkipped_WithNSString:(NSString *)tag;

- (void)videoAdUnload_;

- (void)videoAdVbr_WithInt:(jint)bitrate;

- (void)videoAttributes_WithNSString:(NSString *)attributes;

- (jboolean)videoBitrate_WithInt:(jint)audio
                         withInt:(jint)video;

- (jboolean)videoBuffer_;

- (void)videoComplete_;

- (jboolean)videoDuration_WithDouble:(jdouble)duration;

- (void)videoError_WithNSString:(NSString *)errorMessage;

- (void)videoLoad_WithNSString:(NSString *)videoCategories
                  withNSString:(NSString *)videoId
                  withNSString:(NSString *)videoName;

- (void)videoPause_;

- (JavaLangBoolean *)videoPause_WithNSString:(NSString *)videoName;

- (jboolean)videoPlay_;

- (jboolean)videoPlaying_WithDouble:(jdouble)position;

- (jboolean)videoSeek_WithDouble:(jdouble)position;

- (void)videoTags_WithNSString:(NSString *)tags;

- (void)videoUnload_;

- (JavaLangBoolean *)videoUnload_WithNSString:(NSString *)videoName;

@end

J2OBJC_EMPTY_STATIC_INIT(Core)

inline NSString *Core_get_sDUuid(void);
inline NSString *Core_set_sDUuid(NSString *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *Core_sDUuid;
J2OBJC_STATIC_FIELD_OBJ(Core, sDUuid, NSString *)

inline NSString *Core_get_sClientKey(void);
inline NSString *Core_set_sClientKey(NSString *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *Core_sClientKey;
J2OBJC_STATIC_FIELD_OBJ(Core, sClientKey, NSString *)

inline NSString *Core_get_sBundleId(void);
inline NSString *Core_set_sBundleId(NSString *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *Core_sBundleId;
J2OBJC_STATIC_FIELD_OBJ(Core, sBundleId, NSString *)

inline NSString *Core_get_sPlatform(void);
inline NSString *Core_set_sPlatform(NSString *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *Core_sPlatform;
J2OBJC_STATIC_FIELD_OBJ(Core, sPlatform, NSString *)

inline jboolean Core_get_bProduction(void);
inline jboolean Core_set_bProduction(jboolean value);
inline jboolean *Core_getRef_bProduction(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean Core_bProduction;
J2OBJC_STATIC_FIELD_PRIMITIVE(Core, bProduction, jboolean)

inline jboolean Core_get_bDryRun(void);
inline jboolean Core_set_bDryRun(jboolean value);
inline jboolean *Core_getRef_bDryRun(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean Core_bDryRun;
J2OBJC_STATIC_FIELD_PRIMITIVE(Core, bDryRun, jboolean)

inline jboolean Core_get_bUsingLastSessId(void);
inline jboolean Core_set_bUsingLastSessId(jboolean value);
inline jboolean *Core_getRef_bUsingLastSessId(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean Core_bUsingLastSessId;
J2OBJC_STATIC_FIELD_PRIMITIVE(Core, bUsingLastSessId, jboolean)

inline NSString *Core_get_sProductDomain(void);
inline NSString *Core_set_sProductDomain(NSString *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *Core_sProductDomain;
J2OBJC_STATIC_FIELD_OBJ(Core, sProductDomain, NSString *)

inline NSString *Core_get_sUserID(void);
inline NSString *Core_set_sUserID(NSString *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *Core_sUserID;
J2OBJC_STATIC_FIELD_OBJ(Core, sUserID, NSString *)

FOUNDATION_EXPORT void Core_init(Core *self);

FOUNDATION_EXPORT Core *new_Core_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Core *create_Core_init(void);

FOUNDATION_EXPORT void Core_dpWithNSString_(NSString *s);

FOUNDATION_EXPORT OrgJsonJSONArray *Core_removeFromJsonArrayWithOrgJsonJSONArray_withInt_(OrgJsonJSONArray *jsrc, jint index);

FOUNDATION_EXPORT void Core_peWithNSString_withJavaLangException_(NSString *s, JavaLangException *e);

J2OBJC_TYPE_LITERAL_HEADER(Core)

@compatibility_alias ComPowerAnalyticsCore Core;

#endif

#pragma pop_macro("INCLUDE_ALL_Core")
